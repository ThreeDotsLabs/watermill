{"version":3,"sources":["../../src/react-chunks.js"],"names":[],"mappings":";;;;;;;;;AAgBA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,YAAY,GAAG,SAAf,YAAe,GAAqD;AAAA,iFAAP,EAAO;AAAA,uBAAlD,IAAkD;AAAA,MAAlD,IAAkD,0BAA3C,IAA2C;AAAA,MAArC,UAAqC,QAArC,UAAqC;AAAA,4BAAzB,SAAyB;AAAA,MAAzB,SAAyB,+BAAb,CAAa;;AAAA,kBAC3C,qBAAS,EAAT,CAD2C;AAAA;AAAA,MACjE,KADiE;AAAA,MAC1D,WAD0D;;AAAA,mBAEhD,qBAAS,IAAT,CAFgD;AAAA;AAAA,MAEjE,IAFiE;AAAA,MAE3D,OAF2D;;AAGxE,MAAM,QAAQ,GAAG,mBAAO,IAAP,CAAjB;AAEA,wBAAU,YAAM;AACd,QAAI,QAAQ,CAAC,OAAb,EAAsB,QAAQ,CAAC,OAAT,CAAiB,UAAjB;AACtB,IAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,MAAM,CAAC,oBAAX,CACjB;AAAA;AAAA,UAAE,KAAF;;AAAA,aAAa,WAAW,CAAC,KAAD,CAAxB;AAAA,KADiB,EAEjB;AACE,MAAA,IAAI,EAAJ,IADF;AAEE,MAAA,UAAU,EAAV,UAFF;AAGE,MAAA,SAAS,EAAT;AAHF,KAFiB,CAAnB;AAFc,QAWG,eAXH,GAWuB,QAXvB,CAWN,OAXM;AAYd,QAAI,IAAJ,EAAU,eAAe,CAAC,OAAhB,CAAwB,IAAxB;AAEV,WAAO;AAAA,aAAM,eAAe,CAAC,UAAhB,EAAN;AAAA,KAAP;AACD,GAfD,EAeG,CAAC,IAAD,EAAO,IAAP,EAAa,UAAb,EAAyB,SAAzB,CAfH;AAiBA,SAAO,CAAC,OAAD,EAAU,KAAV,CAAP;AACD,CAvBD;;AAyBA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAA,GAAG,EAAI;AAC/B,SAAQ,GAAG,IAAI,GAAG,CAAC,IAAZ,IAAqB,GAArB,IAA4B,EAAnC;AACD,CAFD;;AAIA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,KAAD,EAAQ,eAAR,EAA0D;AAAA,MAAjC,QAAiC,uEAAtB,iBAAsB;;AAAA,mBAC7D,+BAAU,MAAM,CAAC,WAAjB,EAA8B,KAAK,CAAC,QAApC,CAD6D;AAAA,MACvE,KADuE,cACvE,KADuE;;AAE/E,MAAM,SAAS,GAAG,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,MAApB,CAA2B,OAA3B,CAAlB;;AACA,MAAI,SAAS,CAAC,MAAd,EAAsB;AACpB,IAAA,eAAe,CAAC,SAAD,CAAf;AACD,GAFD,MAEO;AACL;AACA,IAAA,eAAe,CAAC,KAAK,CAAC,IAAP,CAAf;AACD;AACF,CATD;;AAWA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,SAAD,EAA6B;AAAA,MAAjB,OAAiB,uEAAP,EAAO;AACjD,SAAO,UAAA,KAAK,EAAI;AAAA,wBACK,YAAY,CAAC;AAAC,MAAA,IAAI,EAAE,QAAQ,CAAC,IAAT,CAAc;AAArB,KAAD,CADjB;AAAA;AAAA,QACT,GADS;AAAA,QACJ,KADI;;AAEd,QAAM,iBAAiB,GAAG,KAAK,CAAC,iBAAhC;AAEF,0BAAU,YAAM;AACZ,MAAA,OAAO,CAAC,cAAR,GAAyB,cAAzB;;AAEA,UAAI,iBAAiB,GAAG,CAAxB,EAA2B;AACzB,+BAAO,OAAP;AACD;AACF,KANH,EAMK,CAAC,iBAAD,CANL;AAQA,wBACC;AAAK,MAAA,GAAG,EAAE;AAAV,oBACK,gCAAC,SAAD,EAAe,KAAf,CADL,CADD;AAKA,GAjBA;AAkBD,CAnBD","file":"hoc.js","sourcesContent":["/*\n * Copyright 2019-2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport rmanifest from 'route-manifest';\nimport { listen } from './quicklink';\n\nconst useIntersect = ({ root = null, rootMargin, threshold = 0 } = {}) => {\n  const [entry, updateEntry] = useState({});\n  const [node, setNode] = useState(null);\n  const observer = useRef(null);\n\n  useEffect(() => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new window.IntersectionObserver(\n      ([entry]) => updateEntry(entry),\n      {\n        root,\n        rootMargin,\n        threshold\n      }\n    );\n\n    const { current: currentObserver } = observer;\n    if (node) currentObserver.observe(node);\n\n    return () => currentObserver.disconnect();\n  }, [node, root, rootMargin, threshold]);\n\n  return [setNode, entry];\n};\n\nconst __defaultAccessor = mix => {\n  return (mix && mix.href) || mix || '';\n};\n\nconst prefetchChunks = (entry, prefetchHandler, accessor = __defaultAccessor) => {\n  const { files } = rmanifest(window.__rmanifest, entry.pathname);\n  const chunkURLs = files.map(accessor).filter(Boolean);\n  if (chunkURLs.length) {\n    prefetchHandler(chunkURLs);\n  } else {\n    // also prefetch regular links in-viewport\n    prefetchHandler(entry.href);\n  }\n};\n\nconst withQuicklink = (Component, options = {}) => {\n  return props => {\n\t\tconst [ref, entry] = useIntersect({root: document.body.parentElement});\n    const intersectionRatio = entry.intersectionRatio;\n    \n\t\tuseEffect(() => {\n      options.prefetchChunks = prefetchChunks;\n\n      if (intersectionRatio > 0) {\n        listen(options);\n      }\n    }, [intersectionRatio]);    \n\t\t\n\t\treturn (\n\t\t\t<div ref={ref}>\n        <Component {...props} />\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport {\n  withQuicklink\n};\n"]}